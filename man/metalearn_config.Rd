% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metalearn_config.R
\name{metalearn_config}
\alias{metalearn_config}
\title{Meta-Learn HP configuration}
\usage{
metalearn_config(
  task_id,
  meta_feature_names,
  meta_features,
  xgboost_meta_data,
  seed = NULL
)
}
\arguments{
\item{task_id}{\code{integer(1)} OpenML task_id}

\item{meta_feature_names}{\code{data.table()} names of task meta_features}

\item{meta_features}{\code{data.table()} task meta_features}

\item{xgboost_meta_data}{\code{data.table()} xgboost meta_data}

\item{seed}{\code{numeric(1)} for reproducibility}
}
\value{
\code{data.table} of 2 different sets of HP configurations one with highest predicted accuracy and one with small training time.
}
\description{
This function runs meta-learning pipeline using rest of the functions in the package.
It executes following steps:\cr
\enumerate{
\item Run \code{\link{find_similar_tasks}} to find similar tasks for given task_id.
\item Filter xgboost_meta_data by these similar tasks and run \code{\link{return_auc_distribution}} to get the first impression on target variable.
\item Run \code{\link{classify_good_bad}} on filtered data to identify Hyperparameters which are "good" with high probability.
\item Run \code{\link{run_perf_est_model}} on resulting "good" points to build performance prediction model.
\item Select final configurations using \code{\link{select_configs}}.
\item Translate them into the format expected in mlr3 for xgboost learner using \code{\link{translate_config}}.
\item Resulting Hyperparameters are then used in \code{\link{run_config}} to run XGBoost on test task and evaluate them.
}
}
